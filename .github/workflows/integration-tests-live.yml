name: Playwright Live Tests

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
  POSTGRES_URL_NON_POOLING: ${{ secrets.POSTGRES_URL_NON_POOLING }}
  EDGE_CONFIG: ${{ secrets.EDGE_CONFIG }}

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'pnpm'

      - uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install

      # This will use the cache for browsers. But it will reinstall system deps, which can't be cached
      # https://github.com/microsoft/playwright/issues/20603#issuecomment-1416243810
      - run: pnpm dlx playwright install --with-deps

      # https://github.com/patrickedqvist/wait-for-vercel-preview
      # this allows to use action cache, which is not possible when using deployment_status otherwise
      # see https://github.com/actions/cache/issues/319
      - name: Wait for Vercel Preview
        uses: patrickedqvist/wait-for-vercel-preview@v1.3.1
        id: waitForVercelPreview
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          max_timeout: 600

      - name: Run Playwright tests on ${{ steps.waitForVercelPreview.outputs.url }}
        run: pnpm integration-test
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ steps.waitForVercelPreview.outputs.url }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
